(load "../lib/sqrt")

;;; 小さい数のテスト
(sqrt 2)                                ; 1.4142156862745097
(sqrt 0.02)                             ; 0.1444238094866232
(sqrt 0.0002)                           ; 0.03335281609280434
(sqrt 0.000002)                         ; 0.0312713096020622
(sqrt 0.00000002)                       ; 0.03125021312471016

;;; 正しい値はこうなる (rubyでsqrt)
;;; >> Math.sqrt(2) #=> 1.4142135623730951
;;; >> Math.sqrt(0.02) #=> 0.1414213562373095
;;; >> Math.sqrt(0.0002) #=> 0.01414213562373095
;;; >> Math.sqrt(0.000002) #=> 0.001414213562373095
;;; >> Math.sqrt(0.00000002) #=> 0.0001414213562373095


;;; 大きい数のテスト
(sqrt 2)                                ; 1.4142156862745097
(sqrt 20000)                            ; 141.42135623738412
(sqrt 200000000)                        ; 14142.135623730952
(sqrt 2000000000000)                    ; 1414213.5623730952
(sqrt 20000000000000000)                ; 結果が返ってこない

;;; 正しい値はこうなる (rubyでsqrt)
;;; >> Math.sqrt(2) #=> 1.4142135623730951
;;; >> Math.sqrt(20000) #=> 141.4213562373095
;;; >> Math.sqrt(200000000) #=> 14142.13562373095
;;; >> Math.sqrt(2000000000000) #=> 1414213.562373095
;;; >> Math.sqrt(20000000000000000) #=> 141421356.23730952


;;; sqrt を改良する
(define (improve guess x)
  (average guess (/ x guess)))

(define (average x y)
  (/ (+ x y) 2))

(define (good-enough? guess prev-guess)
  (< (abs (- guess prev-guess)) 0.000001))

(define (sqrt-iter guess prev-guess x)
  (if (good-enough? guess prev-guess)
      guess
      (sqrt-iter (improve guess x)
                 guess
                 x)))

(define (sqrt x)
  (sqrt-iter 1.0 1000 x))

;;; 改良版で実行
;;; 小さい数のテスト
(sqrt 2)                                ; 1.414213562373095
(sqrt 0.02)                             ; 0.14142135623730956
(sqrt 0.0002)                           ; 0.014142135623738401
(sqrt 0.000002)                         ; 0.0014142135626178485
(sqrt 0.00000002)                       ; 1.4142135875671105e-4


;;; 大きい値のテスト
(sqrt 2)                                ; 1.414213562373095
(sqrt 20000)                            ; 141.4213562373095
(sqrt 200000000)                        ; 14142.13562373095
(sqrt 2000000000000)                    ; 1414213.5623730952
(sqrt 20000000000000000)                ; 141421356.23730952
